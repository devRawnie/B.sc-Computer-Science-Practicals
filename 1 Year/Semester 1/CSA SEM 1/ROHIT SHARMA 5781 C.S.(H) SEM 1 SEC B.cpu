<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE Machine [
<!ELEMENT Machine (PunctChar*, Field*, FileChannel*, Register*, RegisterArray*, ConditionBit*, RAM*, Set*, Test*, Increment*, Shift*, Logical*, Arithmetic*, Branch*, TransferRtoR*, TransferRtoA*, TransferAtoR*, Decode*, SetCondBit*, IO*, MemoryAccess*, End, Comment*, EQU*, FetchSequence, MachineInstruction*, HighlightingInfo?, LoadingInfo?, IndexingInfo?, ProgramCounterInfo?, ModuleWindowsInfo?) >
<!ATTLIST Machine name CDATA "unnamed">
<!ELEMENT PunctChar EMPTY>
<!ATTLIST PunctChar char CDATA #REQUIRED use  (symbol|token|label|comment|pseudo|illegal) #REQUIRED>
<!ELEMENT Field (FieldValue*)>
<!ATTLIST Field name CDATA #REQUIRED type  (required|optional|ignored) #REQUIRED numBits CDATA #REQUIRED relativity (absolute|pcRelativePreIncr|pcRelativePostIncr) #REQUIRED defaultValue CDATA #REQUIRED signed (true|false) #REQUIRED id ID #REQUIRED>
<!ELEMENT FieldValue EMPTY>
<!ATTLIST FieldValue name CDATA #REQUIRED value CDATA #REQUIRED>
<!ELEMENT FileChannel EMPTY>
<!ATTLIST FileChannel file CDATA #REQUIRED id CDATA #REQUIRED>
<!ELEMENT Register EMPTY>
<!ATTLIST Register name CDATA #REQUIRED width CDATA #REQUIRED initialValue CDATA #REQUIRED readOnly (true|false) "false" id ID #REQUIRED>
<!ELEMENT RegisterArray (Register+)>
<!ATTLIST RegisterArray name CDATA #REQUIRED width CDATA #REQUIRED length CDATA #REQUIRED id ID #REQUIRED>
<!ELEMENT ConditionBit EMPTY>
<!ATTLIST ConditionBit name CDATA #REQUIRED bit CDATA #REQUIRED register IDREF #REQUIRED halt (true|false) "false" id ID #REQUIRED>
<!ELEMENT RAM EMPTY>
<!ATTLIST RAM name CDATA #REQUIRED length CDATA #REQUIRED id ID #REQUIRED cellSize CDATA "8">
<!ELEMENT Increment EMPTY>
<!ATTLIST Increment name CDATA #REQUIRED register IDREF #REQUIRED overflowBit IDREF #IMPLIED carryBit IDREF #IMPLIED delta CDATA #REQUIRED id ID #REQUIRED>
<!ELEMENT Arithmetic EMPTY>
<!ATTLIST Arithmetic name CDATA #REQUIRED type (ADD|SUBTRACT|MULTIPLY|DIVIDE) #REQUIRED source1 IDREF #REQUIRED source2 IDREF #REQUIRED destination IDREF #REQUIRED overflowBit IDREF #IMPLIED  carryBit IDREF #IMPLIED  id ID #REQUIRED>
<!ELEMENT TransferRtoR EMPTY>
<!ATTLIST TransferRtoR name CDATA #REQUIRED source IDREF #REQUIRED srcStartBit CDATA #REQUIRED dest IDREF #REQUIRED destStartBit CDATA #REQUIRED numBits CDATA #REQUIRED id ID #REQUIRED>
<!ELEMENT TransferRtoA EMPTY>
<!ATTLIST TransferRtoA name CDATA #REQUIRED source IDREF #REQUIRED srcStartBit CDATA #REQUIRED dest IDREF #REQUIRED destStartBit CDATA #REQUIRED numBits CDATA #REQUIRED index IDREF #REQUIRED indexStart CDATA #IMPLIED indexNumBits CDATA #IMPLIED id ID #REQUIRED>
<!ELEMENT TransferAtoR EMPTY>
<!ATTLIST TransferAtoR name CDATA #REQUIRED source IDREF #REQUIRED srcStartBit CDATA #REQUIRED dest IDREF #REQUIRED destStartBit CDATA #REQUIRED numBits CDATA #REQUIRED index IDREF #REQUIRED indexStart CDATA #IMPLIED indexNumBits CDATA #IMPLIED id ID #REQUIRED>
<!ELEMENT Shift EMPTY>
<!ATTLIST Shift name CDATA #REQUIRED source IDREF #REQUIRED destination IDREF #REQUIRED type (logical | arithmetic | cyclic) #REQUIRED direction (right | left) #REQUIRED distance CDATA #REQUIRED id ID #REQUIRED>
<!ELEMENT Branch EMPTY>
<!ATTLIST Branch name CDATA #REQUIRED amount CDATA #REQUIRED id ID #REQUIRED>
<!ELEMENT Logical EMPTY>
<!ATTLIST Logical name CDATA #REQUIRED source1 IDREF #REQUIRED source2 IDREF #REQUIRED destination IDREF #REQUIRED type (AND | OR | NAND | NOR | XOR | NOT) #REQUIRED id ID #REQUIRED>
<!ELEMENT Set EMPTY>
<!ATTLIST Set name CDATA #REQUIRED register IDREF #REQUIRED start CDATA #REQUIRED numBits CDATA #REQUIRED value CDATA #REQUIRED id ID #REQUIRED>
<!ELEMENT Test EMPTY >
<!ATTLIST Test name CDATA #REQUIRED register IDREF #REQUIRED start CDATA #REQUIRED numBits CDATA #REQUIRED comparison (EQ | NE | LT | GT | LE | GE ) #REQUIRED value CDATA #REQUIRED omission CDATA #REQUIRED id ID #REQUIRED>
<!ELEMENT Decode EMPTY >
<!ATTLIST Decode name CDATA #REQUIRED ir IDREF #REQUIRED id ID #REQUIRED>
<!ELEMENT IO EMPTY >
<!ATTLIST IO name CDATA #REQUIRED direction (input | output) #REQUIRED type (integer | ascii | unicode) #REQUIRED buffer IDREF #REQUIRED connection CDATA #IMPLIED id ID #REQUIRED>
<!ELEMENT MemoryAccess EMPTY >
<!ATTLIST MemoryAccess name CDATA #REQUIRED direction (read | write ) #REQUIRED memory IDREF #REQUIRED data IDREF #REQUIRED address IDREF #REQUIRED id ID #REQUIRED>
<!ELEMENT SetCondBit EMPTY >
<!ATTLIST SetCondBit name CDATA #REQUIRED bit IDREF #REQUIRED value (0 | 1) #REQUIRED id ID #REQUIRED>
<!ELEMENT End EMPTY>
<!ATTLIST End id ID #REQUIRED>
<!ELEMENT Comment EMPTY>
<!ATTLIST Comment name CDATA #REQUIRED id ID #REQUIRED>
<!ELEMENT Microinstruction EMPTY>
<!ATTLIST Microinstruction microRef IDREF #REQUIRED>
<!ELEMENT MachineInstruction (Microinstruction*)>
<!ATTLIST MachineInstruction name CDATA #REQUIRED opcode CDATA #REQUIRED instructionFormat CDATA #REQUIRED assemblyFormat CDATA #REQUIRED instructionColors CDATA #REQUIRED assemblyColors CDATA #REQUIRED>
<!ELEMENT FetchSequence (Microinstruction*) >
<!ELEMENT EQU EMPTY>
<!ATTLIST EQU name CDATA #REQUIRED value CDATA #REQUIRED>
<!ELEMENT HighlightingInfo (RegisterRAMPair*)>
<!ELEMENT RegisterRAMPair EMPTY>
<!ATTLIST RegisterRAMPair register IDREF #REQUIRED ram IDREF #REQUIRED dynamic (true|false) #REQUIRED>
<!ELEMENT LoadingInfo EMPTY>
<!ATTLIST LoadingInfo ram IDREF #IMPLIED startingAddress CDATA "0">
<!ELEMENT IndexingInfo EMPTY>
<!ATTLIST IndexingInfo indexFromRight CDATA "false">
<!ELEMENT ProgramCounterInfo EMPTY>
<!ATTLIST ProgramCounterInfo programCounter IDREF #REQUIRED>
<!ELEMENT ModuleWindowsInfo ((RegisterWindowInfo | RegisterArrayWindowInfo | RAMWindowInfo)*) >
<!ELEMENT RegisterWindowInfo EMPTY>
<!ATTLIST RegisterWindowInfo top CDATA "50" left CDATA "50" width CDATA "300" height CDATA "150" base (Decimal|Binary|Hexadecimal|Ascii|UnsignedDec|Unicode)  "Decimal">
<!ELEMENT RegisterArrayWindowInfo EMPTY>
<!ATTLIST RegisterArrayWindowInfo array IDREF #REQUIRED top CDATA "50" left CDATA "50" width CDATA "300" height CDATA "150" base (Decimal|Binary|Hexadecimal|Ascii|UnsignedDec|Unicode) "Decimal">
<!ELEMENT RAMWindowInfo EMPTY>
<!ATTLIST RAMWindowInfo ram IDREF #REQUIRED cellSize CDATA "1" top CDATA "50" left CDATA "50" width CDATA "450" height CDATA "450" contentsbase (Decimal|Binary|Hexadecimal|Ascii|UnsignedDec|Unicode) "Decimal" addressbase (Decimal|Binary|Hexadecimal) "Decimal">
]>

<Machine name="ROHIT SHARMA 5781 C.S.(H) SEM 1 SEC B.cpu" >
	<!--............. Punctuation Options .............-->
	<PunctChar char="!" use="symbol" />
	<PunctChar char="#" use="symbol" />
	<PunctChar char="$" use="symbol" />
	<PunctChar char="%" use="symbol" />
	<PunctChar char="&amp;" use="symbol" />
	<PunctChar char="^" use="symbol" />
	<PunctChar char="_" use="symbol" />
	<PunctChar char="`" use="symbol" />
	<PunctChar char="*" use="symbol" />
	<PunctChar char="?" use="symbol" />
	<PunctChar char="@" use="symbol" />
	<PunctChar char="~" use="symbol" />
	<PunctChar char="+" use="symbol" />
	<PunctChar char="-" use="symbol" />
	<PunctChar char="(" use="token" />
	<PunctChar char=")" use="token" />
	<PunctChar char="," use="token" />
	<PunctChar char="/" use="token" />
	<PunctChar char="=" use="token" />
	<PunctChar char="[" use="token" />
	<PunctChar char="\" use="token" />
	<PunctChar char="]" use="token" />
	<PunctChar char="{" use="token" />
	<PunctChar char="|" use="token" />
	<PunctChar char="}" use="token" />
	<PunctChar char="." use="pseudo" />
	<PunctChar char=":" use="label" />
	<PunctChar char=";" use="comment" />

	<!--......... machine instruction fields ............-->
	<Field name="OPCODE" type="required" numBits="16" relativity="absolute" signed="false" defaultValue="0" id="model.Field119f27c">
	</Field>
	<Field name="OPR" type="required" numBits="3" relativity="absolute" signed="false" defaultValue="0" id="model.Field15fba16">
	</Field>
	<Field name="ADDR" type="required" numBits="12" relativity="absolute" signed="false" defaultValue="0" id="model.Field44e0">
	</Field>
	<Field name="MODE" type="required" numBits="1" relativity="absolute" signed="false" defaultValue="0" id="model.Fieldf4f05b">
		<FieldValue name="DIRECT" value="0" />
		<FieldValue name="INDIRECT" value="1" />
	</Field>

	<!--............. FileChannels .................-->
	<!-- none -->

	<!--............. registers .....................-->
	<Register name="IR" width="16" initialValue="0" readOnly="false" id="model.module.Register49915d" />
	<Register name="AC" width="16" initialValue="0" readOnly="false" id="model.module.Register1b2051e" />
	<Register name="S" width="1" initialValue="0" readOnly="false" id="model.module.Register272e9b" />
	<Register name="CTR" width="16" initialValue="0" readOnly="false" id="model.module.Register1565f6f" />
	<Register name="DR" width="16" initialValue="0" readOnly="false" id="model.module.Registerbe8cbe" />
	<Register name="E" width="1" initialValue="0" readOnly="false" id="model.module.Register1662f44" />
	<Register name="INPR" width="8" initialValue="0" readOnly="true" id="model.module.Registerfcb2e0" />
	<Register name="OUTR" width="8" initialValue="0" readOnly="false" id="model.module.Register6c54e3" />
	<Register name="TR" width="16" initialValue="0" readOnly="false" id="model.module.Register77f16c" />
	<Register name="AR" width="12" initialValue="0" readOnly="false" id="model.module.Registere5f869" />
	<Register name="PC" width="12" initialValue="0" readOnly="false" id="model.module.Register1e32aa7" />

	<!--............. register arrays ...............-->
	<!-- none -->

	<!--............. condition bits ................-->
	<ConditionBit name="COUT" bit="0" register="model.module.Register1662f44" halt="false" id="model.module.ConditionBit158ab34" />
	<ConditionBit name="HALTBIT" bit="0" register="model.module.Register272e9b" halt="true" id="model.module.ConditionBitc9cee2" />

	<!--............. rams ..........................-->
	<RAM name="M" length="4096" cellSize="16" id="model.module.RAM19c5da2" />

	<!--............. set ...........................-->
	<Set name="AC&lt;-0" register="model.module.Register1b2051e" start="0" numBits="16" value="0" id="model.microinstruction.CpusimSet102f2e4" />

	<!--............. test ..........................-->
	<Test name="IF (AC[15]!=0) SKIP NEXT" register="model.module.Register1b2051e" start="15" numBits="1" comparison="NE" value="0" omission="1" id="model.microinstruction.Test187f63b" />
	<Test name="IF (AC[15]!=1) SKIP NEXT" register="model.module.Register1b2051e" start="15" numBits="1" comparison="NE" value="1" omission="1" id="model.microinstruction.Test15b8877" />
	<Test name="IF (D7=0) SKIP NEXT 3" register="model.module.Register49915d" start="13" numBits="3" comparison="EQ" value="7" omission="3" id="model.microinstruction.Test97a6b3" />
	<Test name="IF(AC!=0) SKIP NEXT" register="model.module.Register1b2051e" start="0" numBits="16" comparison="NE" value="0" omission="1" id="model.microinstruction.Test62e417" />
	<Test name="IF(CTR!=0) SKIP NEXT" register="model.module.Register1565f6f" start="0" numBits="16" comparison="NE" value="0" omission="1" id="model.microinstruction.Test98f58e" />
	<Test name="IF(DR!=0) SKIP NEXT" register="model.module.Registerbe8cbe" start="0" numBits="16" comparison="NE" value="0" omission="1" id="model.microinstruction.Test1cdcdda" />
	<Test name="IF(E!=0) SKIP NEXT" register="model.module.Register1662f44" start="0" numBits="1" comparison="NE" value="0" omission="1" id="model.microinstruction.Testfe48ee" />
	<Test name="IF(I=0) SKIP NEXT" register="model.module.Register49915d" start="12" numBits="1" comparison="EQ" value="0" omission="1" id="model.microinstruction.Test94eccd" />

	<!--............. increment .....................-->
	<Increment name="AC&lt;-AC+1" register="model.module.Register1b2051e" delta="1" id="model.microinstruction.Increment1945a18" />
	<Increment name="AR&lt;-AR+1" register="model.module.Registere5f869" delta="1" id="model.microinstruction.Increment183c7bc" />
	<Increment name="CTR&lt;-CTR+1" register="model.module.Register1565f6f" delta="1" id="model.microinstruction.Incrementb04dbb" />
	<Increment name="DR&lt;-DR+1" register="model.module.Registerbe8cbe" delta="1" id="model.microinstruction.Increment1a535e4" />
	<Increment name="PC&lt;-PC+1" register="model.module.Register1e32aa7" delta="1" id="model.microinstruction.Incrementa0f992" />

	<!--............. shift .........................-->
	<Shift name="AC&lt;- SHL AC" type="logical" source="model.module.Register1b2051e" destination="model.module.Register1b2051e" direction="left" distance="1" id="model.microinstruction.Shift14d7add" />
	<Shift name="AC&lt;- SHR AC" type="logical" source="model.module.Register1b2051e" destination="model.module.Register1b2051e" direction="right" distance="1" id="model.microinstruction.Shift162225a" />

	<!--............. logical .......................-->
	<Logical name="AC&lt;-AC'" type="NOT" source1="model.module.Register1b2051e" source2="model.module.Register1b2051e" destination="model.module.Register1b2051e" id="model.microinstruction.Logical1d63347" />
	<Logical name="AC&lt;-AC^DR" type="AND" source1="model.module.Register1b2051e" source2="model.module.Registerbe8cbe" destination="model.module.Register1b2051e" id="model.microinstruction.Logical6b2f86" />
	<Logical name="E&lt;-E'" type="NOT" source1="model.module.Register1662f44" source2="model.module.Register1662f44" destination="model.module.Register1662f44" id="model.microinstruction.Logical1e25c4" />

	<!--............. arithmetic ....................-->
	<Arithmetic name="AC&lt;-AC+DR" type="ADD" source1="model.module.Register1b2051e" source2="model.module.Registerbe8cbe" destination="model.module.Register1b2051e" carryBit="model.module.ConditionBit158ab34" id="model.microinstruction.Arithmetic8b9af" />

	<!--............. branch ........................-->
	<!-- none -->

	<!--............. transferRtoR ..................-->
	<TransferRtoR name="AC&lt;-DR" source="model.module.Registerbe8cbe" srcStartBit="0" dest="model.module.Register1b2051e" destStartBit="0" numBits="16" id="model.microinstruction.TransferRtoR3cece2" />
	<TransferRtoR name="AC[0]&lt;-E" source="model.module.Register1662f44" srcStartBit="0" dest="model.module.Register1b2051e" destStartBit="0" numBits="1" id="model.microinstruction.TransferRtoR16af97c" />
	<TransferRtoR name="AC[0]&lt;-TR[0]" source="model.module.Register77f16c" srcStartBit="15" dest="model.module.Register1b2051e" destStartBit="0" numBits="1" id="model.microinstruction.TransferRtoR14dc835" />
	<TransferRtoR name="AC[15]&lt;-E" source="model.module.Register1662f44" srcStartBit="0" dest="model.module.Register1b2051e" destStartBit="15" numBits="1" id="model.microinstruction.TransferRtoR196042" />
	<TransferRtoR name="AC[15]&lt;-TR[15]" source="model.module.Register77f16c" srcStartBit="15" dest="model.module.Register1b2051e" destStartBit="15" numBits="1" id="model.microinstruction.TransferRtoR46d6a4" />
	<TransferRtoR name="AR&lt;-IR[0-11]" source="model.module.Register49915d" srcStartBit="0" dest="model.module.Registere5f869" destStartBit="0" numBits="12" id="model.microinstruction.TransferRtoR970f25" />
	<TransferRtoR name="AR&lt;-PC" source="model.module.Register1e32aa7" srcStartBit="0" dest="model.module.Registere5f869" destStartBit="0" numBits="12" id="model.microinstruction.TransferRtoR18e7a22" />
	<TransferRtoR name="E&lt;-AC[0]" source="model.module.Register1b2051e" srcStartBit="0" dest="model.module.Register1662f44" destStartBit="0" numBits="1" id="model.microinstruction.TransferRtoR2a0ae1" />
	<TransferRtoR name="E&lt;-AC[15]" source="model.module.Register1b2051e" srcStartBit="0" dest="model.module.Register1662f44" destStartBit="0" numBits="1" id="model.microinstruction.TransferRtoR6503b6" />
	<TransferRtoR name="PC&lt;-AR" source="model.module.Registere5f869" srcStartBit="0" dest="model.module.Register1e32aa7" destStartBit="0" numBits="12" id="model.microinstruction.TransferRtoRf9d138" />
	<TransferRtoR name="TR&lt;-PC" source="model.module.Register1e32aa7" srcStartBit="0" dest="model.module.Register77f16c" destStartBit="0" numBits="12" id="model.microinstruction.TransferRtoRaf1af" />
	<TransferRtoR name="TR[0]&lt;-E" source="model.module.Register1662f44" srcStartBit="0" dest="model.module.Register77f16c" destStartBit="15" numBits="1" id="model.microinstruction.TransferRtoR478e0d" />
	<TransferRtoR name="TR[15]&lt;-E" source="model.module.Register1662f44" srcStartBit="0" dest="model.module.Register77f16c" destStartBit="15" numBits="1" id="model.microinstruction.TransferRtoRcb4340" />

	<!--............. transferRtoA ..................-->
	<!-- none -->

	<!--............. transferAtoR ..................-->
	<!-- none -->

	<!--............. decode ........................-->
	<Decode name="DECODE IR" ir="model.module.Register49915d" id="model.microinstruction.Decodedb3ab0" />

	<!--............. set condition bit .............-->
	<SetCondBit name="E&lt;-0" bit="model.module.ConditionBit158ab34" value="0" id="model.microinstruction.SetCondBit109204d" />
	<SetCondBit name="S&lt;-1" bit="model.module.ConditionBitc9cee2" value="1" id="model.microinstruction.SetCondBit130efc7" />

	<!--............. io ............................-->
	<IO name="AC&lt;-INPR" direction="input" type="ascii" buffer="model.module.Register1b2051e" connection="[Console]" id="model.microinstruction.IO17d6262" />
	<IO name="OUTR&lt;-AC" direction="output" type="ascii" buffer="model.module.Register1b2051e" connection="[Console]" id="model.microinstruction.IOcda47" />

	<!--............. memory access .................-->
	<MemoryAccess name="AR&lt;-M[AR]" direction="read" memory="model.module.RAM19c5da2" data="model.module.Registere5f869" address="model.module.Registere5f869" id="model.microinstruction.MemoryAccessbd9a83" />
	<MemoryAccess name="CTR&lt;-M[AR]" direction="read" memory="model.module.RAM19c5da2" data="model.module.Register1565f6f" address="model.module.Registere5f869" id="model.microinstruction.MemoryAccess891704" />
	<MemoryAccess name="DR&lt;-M[AR]" direction="read" memory="model.module.RAM19c5da2" data="model.module.Registerbe8cbe" address="model.module.Registere5f869" id="model.microinstruction.MemoryAccess6d10c5" />
	<MemoryAccess name="IR&lt;-M[AR]" direction="read" memory="model.module.RAM19c5da2" data="model.module.Register49915d" address="model.module.Registere5f869" id="model.microinstruction.MemoryAccesscb26ed" />
	<MemoryAccess name="M[AR]&lt;-AC" direction="write" memory="model.module.RAM19c5da2" data="model.module.Register1b2051e" address="model.module.Registere5f869" id="model.microinstruction.MemoryAccesseac875" />
	<MemoryAccess name="M[AR]&lt;-DR" direction="write" memory="model.module.RAM19c5da2" data="model.module.Registerbe8cbe" address="model.module.Registere5f869" id="model.microinstruction.MemoryAccess4dc2db" />
	<MemoryAccess name="M[AR]&lt;-PC" direction="write" memory="model.module.RAM19c5da2" data="model.module.Register1e32aa7" address="model.module.Registere5f869" id="model.microinstruction.MemoryAccess9a0f6f" />

	<!--............. end ...........................-->
	<End id="model.microinstruction.End113a41f" />

	<!--............. comment ...........................-->
	<!-- none -->

	<!--............. global equs ..................-->
	<!-- none -->

	<!--............. fetch sequence ................-->
	<FetchSequence>
		<Microinstruction microRef="model.microinstruction.TransferRtoR18e7a22" />
		<Microinstruction microRef="model.microinstruction.MemoryAccesscb26ed" />
		<Microinstruction microRef="model.microinstruction.Incrementa0f992" />
		<Microinstruction microRef="model.microinstruction.Test97a6b3" />
		<Microinstruction microRef="model.microinstruction.TransferRtoR970f25" />
		<Microinstruction microRef="model.microinstruction.Test94eccd" />
		<Microinstruction microRef="model.microinstruction.MemoryAccessbd9a83" />
		<Microinstruction microRef="model.microinstruction.Decodedb3ab0" />
	</FetchSequence>

	<!--............. machine instructions ..........-->

	<MachineInstruction name="LDC" opcode="6" instructionFormat="OPR MODE ADDR" assemblyFormat="OPR MODE ADDR" instructionColors="#e4fbd6 #d7bdc5 #89b7dd" assemblyColors="#e4fbd6 #d7bdc5 #89b7dd" >
		<Microinstruction microRef="model.microinstruction.MemoryAccess891704" />
		<Microinstruction microRef="model.microinstruction.End113a41f" />
	</MachineInstruction>

	<MachineInstruction name="OUT" opcode="f400" instructionFormat="OPCODE" assemblyFormat="OPCODE" instructionColors="#a6cdfa" assemblyColors="#a6cdfa" >
		<Microinstruction microRef="model.microinstruction.IOcda47" />
		<Microinstruction microRef="model.microinstruction.End113a41f" />
	</MachineInstruction>

	<MachineInstruction name="INP" opcode="f800" instructionFormat="OPCODE" assemblyFormat="OPCODE" instructionColors="#a6cdfa" assemblyColors="#a6cdfa" >
		<Microinstruction microRef="model.microinstruction.IO17d6262" />
		<Microinstruction microRef="model.microinstruction.End113a41f" />
	</MachineInstruction>

	<MachineInstruction name="HLT" opcode="e001" instructionFormat="OPCODE" assemblyFormat="OPCODE" instructionColors="#ecfcc0" assemblyColors="#ecfcc0" >
		<Microinstruction microRef="model.microinstruction.SetCondBit130efc7" />
		<Microinstruction microRef="model.microinstruction.End113a41f" />
	</MachineInstruction>

	<MachineInstruction name="SZE" opcode="e002" instructionFormat="OPCODE" assemblyFormat="OPCODE" instructionColors="#ecfcc0" assemblyColors="#ecfcc0" >
		<Microinstruction microRef="model.microinstruction.Testfe48ee" />
		<Microinstruction microRef="model.microinstruction.Incrementa0f992" />
		<Microinstruction microRef="model.microinstruction.End113a41f" />
	</MachineInstruction>

	<MachineInstruction name="SZA" opcode="e004" instructionFormat="OPCODE" assemblyFormat="OPCODE" instructionColors="#ecfcc0" assemblyColors="#ecfcc0" >
		<Microinstruction microRef="model.microinstruction.Test62e417" />
		<Microinstruction microRef="model.microinstruction.Incrementa0f992" />
		<Microinstruction microRef="model.microinstruction.End113a41f" />
	</MachineInstruction>

	<MachineInstruction name="SNA" opcode="e008" instructionFormat="OPCODE" assemblyFormat="OPCODE" instructionColors="#ecfcc0" assemblyColors="#ecfcc0" >
		<Microinstruction microRef="model.microinstruction.Test15b8877" />
		<Microinstruction microRef="model.microinstruction.Incrementa0f992" />
		<Microinstruction microRef="model.microinstruction.End113a41f" />
	</MachineInstruction>

	<MachineInstruction name="SPA" opcode="e010" instructionFormat="OPCODE" assemblyFormat="OPCODE" instructionColors="#ecfcc0" assemblyColors="#ecfcc0" >
		<Microinstruction microRef="model.microinstruction.Test187f63b" />
		<Microinstruction microRef="model.microinstruction.Incrementa0f992" />
		<Microinstruction microRef="model.microinstruction.End113a41f" />
	</MachineInstruction>

	<MachineInstruction name="INC" opcode="e020" instructionFormat="OPCODE" assemblyFormat="OPCODE" instructionColors="#ecfcc0" assemblyColors="#ecfcc0" >
		<Microinstruction microRef="model.microinstruction.Increment1945a18" />
		<Microinstruction microRef="model.microinstruction.End113a41f" />
	</MachineInstruction>

	<MachineInstruction name="CIL" opcode="e040" instructionFormat="OPCODE" assemblyFormat="OPCODE" instructionColors="#ecfcc0" assemblyColors="#ecfcc0" >
		<Microinstruction microRef="model.microinstruction.TransferRtoR478e0d" />
		<Microinstruction microRef="model.microinstruction.TransferRtoR6503b6" />
		<Microinstruction microRef="model.microinstruction.Shift14d7add" />
		<Microinstruction microRef="model.microinstruction.TransferRtoR14dc835" />
		<Microinstruction microRef="model.microinstruction.End113a41f" />
	</MachineInstruction>

	<MachineInstruction name="CIR" opcode="e080" instructionFormat="OPCODE" assemblyFormat="OPCODE" instructionColors="#ecfcc0" assemblyColors="#ecfcc0" >
		<Microinstruction microRef="model.microinstruction.TransferRtoRcb4340" />
		<Microinstruction microRef="model.microinstruction.TransferRtoR2a0ae1" />
		<Microinstruction microRef="model.microinstruction.Shift162225a" />
		<Microinstruction microRef="model.microinstruction.TransferRtoR46d6a4" />
		<Microinstruction microRef="model.microinstruction.End113a41f" />
	</MachineInstruction>

	<MachineInstruction name="CME" opcode="e100" instructionFormat="OPCODE" assemblyFormat="OPCODE" instructionColors="#ecfcc0" assemblyColors="#ecfcc0" >
		<Microinstruction microRef="model.microinstruction.Logical1e25c4" />
		<Microinstruction microRef="model.microinstruction.End113a41f" />
	</MachineInstruction>

	<MachineInstruction name="CMA" opcode="e200" instructionFormat="OPCODE" assemblyFormat="OPCODE" instructionColors="#ecfcc0" assemblyColors="#ecfcc0" >
		<Microinstruction microRef="model.microinstruction.Logical1d63347" />
		<Microinstruction microRef="model.microinstruction.End113a41f" />
	</MachineInstruction>

	<MachineInstruction name="CLE" opcode="e400" instructionFormat="OPCODE" assemblyFormat="OPCODE" instructionColors="#ecfcc0" assemblyColors="#ecfcc0" >
		<Microinstruction microRef="model.microinstruction.SetCondBit109204d" />
		<Microinstruction microRef="model.microinstruction.End113a41f" />
	</MachineInstruction>

	<MachineInstruction name="CLA" opcode="e800" instructionFormat="OPCODE" assemblyFormat="OPCODE" instructionColors="#ecfcc0" assemblyColors="#ecfcc0" >
		<Microinstruction microRef="model.microinstruction.CpusimSet102f2e4" />
		<Microinstruction microRef="model.microinstruction.End113a41f" />
	</MachineInstruction>

	<MachineInstruction name="ICSZ" opcode="f020" instructionFormat="OPCODE" assemblyFormat="OPCODE" instructionColors="#f2aded" assemblyColors="#f2aded" >
		<Microinstruction microRef="model.microinstruction.Incrementb04dbb" />
		<Microinstruction microRef="model.microinstruction.Test98f58e" />
		<Microinstruction microRef="model.microinstruction.Incrementa0f992" />
		<Microinstruction microRef="model.microinstruction.End113a41f" />
	</MachineInstruction>

	<MachineInstruction name="BSA" opcode="5" instructionFormat="OPR MODE ADDR" assemblyFormat="OPR MODE ADDR" instructionColors="#a1cbe0 #e2abef #96a3bc" assemblyColors="#a1cbe0 #e2abef #96a3bc" >
		<Microinstruction microRef="model.microinstruction.MemoryAccess9a0f6f" />
		<Microinstruction microRef="model.microinstruction.Increment183c7bc" />
		<Microinstruction microRef="model.microinstruction.TransferRtoRf9d138" />
		<Microinstruction microRef="model.microinstruction.End113a41f" />
	</MachineInstruction>

	<MachineInstruction name="BUN" opcode="4" instructionFormat="OPR MODE ADDR" assemblyFormat="OPR MODE ADDR" instructionColors="#a1cbe0 #e2abef #96a3bc" assemblyColors="#a1cbe0 #e2abef #96a3bc" >
		<Microinstruction microRef="model.microinstruction.TransferRtoRf9d138" />
		<Microinstruction microRef="model.microinstruction.End113a41f" />
	</MachineInstruction>

	<MachineInstruction name="STA" opcode="3" instructionFormat="OPR MODE ADDR" assemblyFormat="OPR MODE ADDR" instructionColors="#a1cbe0 #e2abef #96a3bc" assemblyColors="#a1cbe0 #e2abef #96a3bc" >
		<Microinstruction microRef="model.microinstruction.MemoryAccesseac875" />
		<Microinstruction microRef="model.microinstruction.End113a41f" />
	</MachineInstruction>

	<MachineInstruction name="LDA" opcode="2" instructionFormat="OPR MODE ADDR" assemblyFormat="OPR MODE ADDR" instructionColors="#a1cbe0 #e2abef #96a3bc" assemblyColors="#a1cbe0 #e2abef #96a3bc" >
		<Microinstruction microRef="model.microinstruction.MemoryAccess6d10c5" />
		<Microinstruction microRef="model.microinstruction.TransferRtoR3cece2" />
		<Microinstruction microRef="model.microinstruction.End113a41f" />
	</MachineInstruction>

	<MachineInstruction name="ADD" opcode="1" instructionFormat="OPR MODE ADDR" assemblyFormat="OPR MODE ADDR" instructionColors="#a1cbe0 #e2abef #96a3bc" assemblyColors="#a1cbe0 #e2abef #96a3bc" >
		<Microinstruction microRef="model.microinstruction.MemoryAccess6d10c5" />
		<Microinstruction microRef="model.microinstruction.Arithmetic8b9af" />
		<Microinstruction microRef="model.microinstruction.End113a41f" />
	</MachineInstruction>

	<MachineInstruction name="AND" opcode="0" instructionFormat="OPR MODE ADDR" assemblyFormat="OPR MODE ADDR" instructionColors="#a1cbe0 #e2abef #96a3bc" assemblyColors="#a1cbe0 #e2abef #96a3bc" >
		<Microinstruction microRef="model.microinstruction.MemoryAccess6d10c5" />
		<Microinstruction microRef="model.microinstruction.Logical6b2f86" />
		<Microinstruction microRef="model.microinstruction.End113a41f" />
	</MachineInstruction>

	<!--............. highlighting info .............-->
	<HighlightingInfo>
	</HighlightingInfo>

	<!--............. loading info ..................-->
	<LoadingInfo ram="model.module.RAM19c5da2" startingAddress="0" />

	<!--............. indexing info ............-->
	<IndexingInfo indexFromRight="true" />

	<!--............. program counter info ..................-->

</Machine>
