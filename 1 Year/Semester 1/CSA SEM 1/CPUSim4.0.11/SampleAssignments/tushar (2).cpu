<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE Machine [
<!ELEMENT Machine (PunctChar*, Field*, FileChannel*, Register*, RegisterArray*, ConditionBit*, RAM*, Set*, Test*, Increment*, Shift*, Logical*, Arithmetic*, Branch*, TransferRtoR*, TransferRtoA*, TransferAtoR*, Decode*, SetCondBit*, IO*, MemoryAccess*, End, Comment*, EQU*, FetchSequence, MachineInstruction*, HighlightingInfo?, LoadingInfo?, IndexingInfo?, ProgramCounterInfo?, ModuleWindowsInfo?) >
<!ATTLIST Machine name CDATA "unnamed">
<!ELEMENT PunctChar EMPTY>
<!ATTLIST PunctChar char CDATA #REQUIRED use  (symbol|token|label|comment|pseudo|illegal) #REQUIRED>
<!ELEMENT Field (FieldValue*)>
<!ATTLIST Field name CDATA #REQUIRED type  (required|optional|ignored) #REQUIRED numBits CDATA #REQUIRED relativity (absolute|pcRelativePreIncr|pcRelativePostIncr) #REQUIRED defaultValue CDATA #REQUIRED signed (true|false) #REQUIRED id ID #REQUIRED>
<!ELEMENT FieldValue EMPTY>
<!ATTLIST FieldValue name CDATA #REQUIRED value CDATA #REQUIRED>
<!ELEMENT FileChannel EMPTY>
<!ATTLIST FileChannel file CDATA #REQUIRED id CDATA #REQUIRED>
<!ELEMENT Register EMPTY>
<!ATTLIST Register name CDATA #REQUIRED width CDATA #REQUIRED initialValue CDATA #REQUIRED readOnly (true|false) "false" id ID #REQUIRED>
<!ELEMENT RegisterArray (Register+)>
<!ATTLIST RegisterArray name CDATA #REQUIRED width CDATA #REQUIRED length CDATA #REQUIRED id ID #REQUIRED>
<!ELEMENT ConditionBit EMPTY>
<!ATTLIST ConditionBit name CDATA #REQUIRED bit CDATA #REQUIRED register IDREF #REQUIRED halt (true|false) "false" id ID #REQUIRED>
<!ELEMENT RAM EMPTY>
<!ATTLIST RAM name CDATA #REQUIRED length CDATA #REQUIRED id ID #REQUIRED cellSize CDATA "8">
<!ELEMENT Increment EMPTY>
<!ATTLIST Increment name CDATA #REQUIRED register IDREF #REQUIRED overflowBit IDREF #IMPLIED carryBit IDREF #IMPLIED delta CDATA #REQUIRED id ID #REQUIRED>
<!ELEMENT Arithmetic EMPTY>
<!ATTLIST Arithmetic name CDATA #REQUIRED type (ADD|SUBTRACT|MULTIPLY|DIVIDE) #REQUIRED source1 IDREF #REQUIRED source2 IDREF #REQUIRED destination IDREF #REQUIRED overflowBit IDREF #IMPLIED  carryBit IDREF #IMPLIED  id ID #REQUIRED>
<!ELEMENT TransferRtoR EMPTY>
<!ATTLIST TransferRtoR name CDATA #REQUIRED source IDREF #REQUIRED srcStartBit CDATA #REQUIRED dest IDREF #REQUIRED destStartBit CDATA #REQUIRED numBits CDATA #REQUIRED id ID #REQUIRED>
<!ELEMENT TransferRtoA EMPTY>
<!ATTLIST TransferRtoA name CDATA #REQUIRED source IDREF #REQUIRED srcStartBit CDATA #REQUIRED dest IDREF #REQUIRED destStartBit CDATA #REQUIRED numBits CDATA #REQUIRED index IDREF #REQUIRED indexStart CDATA #IMPLIED indexNumBits CDATA #IMPLIED id ID #REQUIRED>
<!ELEMENT TransferAtoR EMPTY>
<!ATTLIST TransferAtoR name CDATA #REQUIRED source IDREF #REQUIRED srcStartBit CDATA #REQUIRED dest IDREF #REQUIRED destStartBit CDATA #REQUIRED numBits CDATA #REQUIRED index IDREF #REQUIRED indexStart CDATA #IMPLIED indexNumBits CDATA #IMPLIED id ID #REQUIRED>
<!ELEMENT Shift EMPTY>
<!ATTLIST Shift name CDATA #REQUIRED source IDREF #REQUIRED destination IDREF #REQUIRED type (logical | arithmetic | cyclic) #REQUIRED direction (right | left) #REQUIRED distance CDATA #REQUIRED id ID #REQUIRED>
<!ELEMENT Branch EMPTY>
<!ATTLIST Branch name CDATA #REQUIRED amount CDATA #REQUIRED id ID #REQUIRED>
<!ELEMENT Logical EMPTY>
<!ATTLIST Logical name CDATA #REQUIRED source1 IDREF #REQUIRED source2 IDREF #REQUIRED destination IDREF #REQUIRED type (AND | OR | NAND | NOR | XOR | NOT) #REQUIRED id ID #REQUIRED>
<!ELEMENT Set EMPTY>
<!ATTLIST Set name CDATA #REQUIRED register IDREF #REQUIRED start CDATA #REQUIRED numBits CDATA #REQUIRED value CDATA #REQUIRED id ID #REQUIRED>
<!ELEMENT Test EMPTY >
<!ATTLIST Test name CDATA #REQUIRED register IDREF #REQUIRED start CDATA #REQUIRED numBits CDATA #REQUIRED comparison (EQ | NE | LT | GT | LE | GE ) #REQUIRED value CDATA #REQUIRED omission CDATA #REQUIRED id ID #REQUIRED>
<!ELEMENT Decode EMPTY >
<!ATTLIST Decode name CDATA #REQUIRED ir IDREF #REQUIRED id ID #REQUIRED>
<!ELEMENT IO EMPTY >
<!ATTLIST IO name CDATA #REQUIRED direction (input | output) #REQUIRED type (integer | ascii | unicode) #REQUIRED buffer IDREF #REQUIRED connection CDATA #IMPLIED id ID #REQUIRED>
<!ELEMENT MemoryAccess EMPTY >
<!ATTLIST MemoryAccess name CDATA #REQUIRED direction (read | write ) #REQUIRED memory IDREF #REQUIRED data IDREF #REQUIRED address IDREF #REQUIRED id ID #REQUIRED>
<!ELEMENT SetCondBit EMPTY >
<!ATTLIST SetCondBit name CDATA #REQUIRED bit IDREF #REQUIRED value (0 | 1) #REQUIRED id ID #REQUIRED>
<!ELEMENT End EMPTY>
<!ATTLIST End id ID #REQUIRED>
<!ELEMENT Comment EMPTY>
<!ATTLIST Comment name CDATA #REQUIRED id ID #REQUIRED>
<!ELEMENT Microinstruction EMPTY>
<!ATTLIST Microinstruction microRef IDREF #REQUIRED>
<!ELEMENT MachineInstruction (Microinstruction*)>
<!ATTLIST MachineInstruction name CDATA #REQUIRED opcode CDATA #REQUIRED instructionFormat CDATA #REQUIRED assemblyFormat CDATA #REQUIRED instructionColors CDATA #REQUIRED assemblyColors CDATA #REQUIRED>
<!ELEMENT FetchSequence (Microinstruction*) >
<!ELEMENT EQU EMPTY>
<!ATTLIST EQU name CDATA #REQUIRED value CDATA #REQUIRED>
<!ELEMENT HighlightingInfo (RegisterRAMPair*)>
<!ELEMENT RegisterRAMPair EMPTY>
<!ATTLIST RegisterRAMPair register IDREF #REQUIRED ram IDREF #REQUIRED dynamic (true|false) #REQUIRED>
<!ELEMENT LoadingInfo EMPTY>
<!ATTLIST LoadingInfo ram IDREF #IMPLIED startingAddress CDATA "0">
<!ELEMENT IndexingInfo EMPTY>
<!ATTLIST IndexingInfo indexFromRight CDATA "false">
<!ELEMENT ProgramCounterInfo EMPTY>
<!ATTLIST ProgramCounterInfo programCounter IDREF #REQUIRED>
<!ELEMENT ModuleWindowsInfo ((RegisterWindowInfo | RegisterArrayWindowInfo | RAMWindowInfo)*) >
<!ELEMENT RegisterWindowInfo EMPTY>
<!ATTLIST RegisterWindowInfo top CDATA "50" left CDATA "50" width CDATA "300" height CDATA "150" base (Decimal|Binary|Hexadecimal|Ascii|UnsignedDec|Unicode)  "Decimal">
<!ELEMENT RegisterArrayWindowInfo EMPTY>
<!ATTLIST RegisterArrayWindowInfo array IDREF #REQUIRED top CDATA "50" left CDATA "50" width CDATA "300" height CDATA "150" base (Decimal|Binary|Hexadecimal|Ascii|UnsignedDec|Unicode) "Decimal">
<!ELEMENT RAMWindowInfo EMPTY>
<!ATTLIST RAMWindowInfo ram IDREF #REQUIRED cellSize CDATA "1" top CDATA "50" left CDATA "50" width CDATA "450" height CDATA "450" contentsbase (Decimal|Binary|Hexadecimal|Ascii|UnsignedDec|Unicode) "Decimal" addressbase (Decimal|Binary|Hexadecimal) "Decimal">
]>

<Machine name="tushar (2).cpu" >
	<!--............. Punctuation Options .............-->
	<PunctChar char="!" use="symbol" />
	<PunctChar char="#" use="symbol" />
	<PunctChar char="$" use="symbol" />
	<PunctChar char="%" use="symbol" />
	<PunctChar char="&amp;" use="symbol" />
	<PunctChar char="^" use="symbol" />
	<PunctChar char="_" use="symbol" />
	<PunctChar char="`" use="symbol" />
	<PunctChar char="*" use="symbol" />
	<PunctChar char="?" use="symbol" />
	<PunctChar char="@" use="symbol" />
	<PunctChar char="~" use="symbol" />
	<PunctChar char="+" use="symbol" />
	<PunctChar char="-" use="symbol" />
	<PunctChar char="(" use="token" />
	<PunctChar char=")" use="token" />
	<PunctChar char="," use="token" />
	<PunctChar char="/" use="token" />
	<PunctChar char="=" use="token" />
	<PunctChar char="[" use="token" />
	<PunctChar char="\" use="token" />
	<PunctChar char="]" use="token" />
	<PunctChar char="{" use="token" />
	<PunctChar char="|" use="token" />
	<PunctChar char="}" use="token" />
	<PunctChar char="." use="pseudo" />
	<PunctChar char=":" use="label" />
	<PunctChar char=";" use="comment" />

	<!--......... machine instruction fields ............-->
	<Field name="Address" type="required" numBits="12" relativity="absolute" signed="false" defaultValue="0" id="model.Fieldbd8aaf">
	</Field>
	<Field name="Mode" type="required" numBits="1" relativity="absolute" signed="false" defaultValue="0" id="model.Field1621064">
		<FieldValue name="Direct" value="0" />
		<FieldValue name="Indirect" value="1" />
	</Field>
	<Field name="Opcode" type="required" numBits="3" relativity="absolute" signed="false" defaultValue="0" id="model.Field4cd6da">
	</Field>
	<Field name="Opcd" type="required" numBits="16" relativity="absolute" signed="false" defaultValue="0" id="model.Field1045627">
	</Field>

	<!--............. FileChannels .................-->
	<!-- none -->

	<!--............. registers .....................-->
	<Register name="AC" width="16" initialValue="0" readOnly="false" id="model.module.Register3d0ab9" />
	<Register name="AR" width="12" initialValue="0" readOnly="false" id="model.module.Register3969" />
	<Register name="CTR" width="16" initialValue="0" readOnly="false" id="model.module.Register19c2267" />
	<Register name="DR" width="16" initialValue="0" readOnly="false" id="model.module.Register1362cac" />
	<Register name="E" width="1" initialValue="0" readOnly="false" id="model.module.Register19883b1" />
	<Register name="INPR" width="8" initialValue="0" readOnly="true" id="model.module.Registerf2241a" />
	<Register name="IR" width="16" initialValue="0" readOnly="false" id="model.module.Register27b8f9" />
	<Register name="OUTR" width="8" initialValue="0" readOnly="false" id="model.module.Registereea5dd" />
	<Register name="PC" width="12" initialValue="0" readOnly="false" id="model.module.Register1423afa" />
	<Register name="S" width="1" initialValue="0" readOnly="false" id="model.module.Register4d08bc" />
	<Register name="TR" width="16" initialValue="0" readOnly="false" id="model.module.Register186973c" />

	<!--............. register arrays ...............-->
	<!-- none -->

	<!--............. condition bits ................-->
	<ConditionBit name="COUT" bit="0" register="model.module.Register19883b1" halt="false" id="model.module.ConditionBitbf10dc" />
	<ConditionBit name="HALTBIT" bit="0" register="model.module.Register4d08bc" halt="true" id="model.module.ConditionBit9e7a9b" />

	<!--............. rams ..........................-->
	<RAM name="M" length="4096" cellSize="16" id="model.module.RAM86991c" />

	<!--............. set ...........................-->
	<Set name="AC&lt;-0" register="model.module.Register3d0ab9" start="0" numBits="16" value="0" id="model.microinstruction.CpusimSet1ded087" />

	<!--............. test ..........................-->
	<Test name="IF(AC!=0) then skip next 1" register="model.module.Register3d0ab9" start="0" numBits="16" comparison="NE" value="0" omission="1" id="model.microinstruction.Test1b51490" />
	<Test name="IF(AC(15)!=0)then skip next 1" register="model.module.Register3d0ab9" start="15" numBits="1" comparison="NE" value="0" omission="1" id="model.microinstruction.Test12fbdf" />
	<Test name="IF(AC(15)!=1) then skip next 1" register="model.module.Register3d0ab9" start="15" numBits="1" comparison="NE" value="1" omission="1" id="model.microinstruction.Test66d678" />
	<Test name="IF(CTR!=0) then skip next 1" register="model.module.Register19c2267" start="0" numBits="16" comparison="NE" value="0" omission="1" id="model.microinstruction.Test1a3799b" />
	<Test name="IF(D7=1) then skip next 3" register="model.module.Register27b8f9" start="13" numBits="3" comparison="EQ" value="7" omission="3" id="model.microinstruction.Test21f2eb" />
	<Test name="IF(DR!=0) then skip next 1" register="model.module.Register1362cac" start="0" numBits="16" comparison="NE" value="0" omission="1" id="model.microinstruction.Test1ac2133" />
	<Test name="IF(E!=0) then skip next 1" register="model.module.Register19883b1" start="0" numBits="1" comparison="NE" value="0" omission="1" id="model.microinstruction.Test1a3f668" />
	<Test name="IF(I=0) then skip next 1" register="model.module.Register27b8f9" start="12" numBits="1" comparison="EQ" value="0" omission="1" id="model.microinstruction.Test1a43726" />

	<!--............. increment .....................-->
	<Increment name="AC&lt;-AC+1" register="model.module.Register3d0ab9" delta="1" id="model.microinstruction.Incrementfd2913" />
	<Increment name="AR&lt;-AR+1" register="model.module.Register3969" delta="1" id="model.microinstruction.Increment982a06" />
	<Increment name="CTR&lt;-CTR+1" register="model.module.Register19c2267" delta="1" id="model.microinstruction.Incrementec8b4b" />
	<Increment name="DR&lt;-DR+1" register="model.module.Register1362cac" delta="1" id="model.microinstruction.Incrementc39a77" />
	<Increment name="PC&lt;-PC+1" register="model.module.Register1423afa" delta="1" id="model.microinstruction.Increment163938d" />

	<!--............. shift .........................-->
	<Shift name="AC&lt;-shlAC" type="logical" source="model.module.Register3d0ab9" destination="model.module.Register3d0ab9" direction="left" distance="1" id="model.microinstruction.Shift564e7d" />
	<Shift name="AC&lt;-shrAC" type="logical" source="model.module.Register3d0ab9" destination="model.module.Register3d0ab9" direction="right" distance="1" id="model.microinstruction.Shiftdc3baf" />

	<!--............. logical .......................-->
	<Logical name="AC&lt;-AC'" type="NOT" source1="model.module.Register3d0ab9" source2="model.module.Register3d0ab9" destination="model.module.Register3d0ab9" id="model.microinstruction.Logicalba1e21" />
	<Logical name="AC&lt;-AC^DR " type="AND" source1="model.module.Register3d0ab9" source2="model.module.Register1362cac" destination="model.module.Register3d0ab9" id="model.microinstruction.Logical1260340" />
	<Logical name="E&lt;-E'" type="NOT" source1="model.module.Register19883b1" source2="model.module.Register19883b1" destination="model.module.Register19883b1" id="model.microinstruction.Logical13395ff" />

	<!--............. arithmetic ....................-->
	<Arithmetic name="AC&lt;-AC+DR" type="ADD" source1="model.module.Register3d0ab9" source2="model.module.Register1362cac" destination="model.module.Register3d0ab9" carryBit="model.module.ConditionBitbf10dc" id="model.microinstruction.Arithmetic6dc475" />
	<Arithmetic name="AC&lt;-AC-DR" type="SUBTRACT" source1="model.module.Register3d0ab9" source2="model.module.Register1362cac" destination="model.module.Register3d0ab9" carryBit="model.module.ConditionBitbf10dc" id="model.microinstruction.Arithmetic3e81cf" />

	<!--............. branch ........................-->
	<!-- none -->

	<!--............. transferRtoR ..................-->
	<TransferRtoR name="AC(0)&lt;-E" source="model.module.Register19883b1" srcStartBit="0" dest="model.module.Register3d0ab9" destStartBit="0" numBits="1" id="model.microinstruction.TransferRtoR199a50b" />
	<TransferRtoR name="AC(0)&lt;-TR(0)" source="model.module.Register186973c" srcStartBit="0" dest="model.module.Register3d0ab9" destStartBit="0" numBits="1" id="model.microinstruction.TransferRtoR25c6a" />
	<TransferRtoR name="AC(15)&lt;-E" source="model.module.Register19883b1" srcStartBit="0" dest="model.module.Register3d0ab9" destStartBit="15" numBits="1" id="model.microinstruction.TransferRtoRe67673" />
	<TransferRtoR name="AC(15)&lt;-TR(15)" source="model.module.Register186973c" srcStartBit="15" dest="model.module.Register3d0ab9" destStartBit="15" numBits="1" id="model.microinstruction.TransferRtoRfea219" />
	<TransferRtoR name="AC&lt;-DR" source="model.module.Register1362cac" srcStartBit="0" dest="model.module.Register3d0ab9" destStartBit="0" numBits="16" id="model.microinstruction.TransferRtoRc5f6b0" />
	<TransferRtoR name="AR&lt;-IR(0-11)" source="model.module.Register27b8f9" srcStartBit="0" dest="model.module.Register3969" destStartBit="0" numBits="12" id="model.microinstruction.TransferRtoR7612ce" />
	<TransferRtoR name="AR&lt;-PC" source="model.module.Register1423afa" srcStartBit="0" dest="model.module.Register3969" destStartBit="0" numBits="12" id="model.microinstruction.TransferRtoR1faaa1d" />
	<TransferRtoR name="E&lt;-AC(0)" source="model.module.Register3d0ab9" srcStartBit="0" dest="model.module.Register19883b1" destStartBit="0" numBits="1" id="model.microinstruction.TransferRtoR233611" />
	<TransferRtoR name="E&lt;-AC(15)" source="model.module.Register3d0ab9" srcStartBit="15" dest="model.module.Register19883b1" destStartBit="0" numBits="1" id="model.microinstruction.TransferRtoR1342e53" />
	<TransferRtoR name="PC&lt;-AR" source="model.module.Register3969" srcStartBit="0" dest="model.module.Register1423afa" destStartBit="0" numBits="12" id="model.microinstruction.TransferRtoR17ebe99" />
	<TransferRtoR name="TR(0)&lt;-E" source="model.module.Register19883b1" srcStartBit="0" dest="model.module.Register186973c" destStartBit="0" numBits="1" id="model.microinstruction.TransferRtoR1c251e9" />
	<TransferRtoR name="TR(15)&lt;-E" source="model.module.Register19883b1" srcStartBit="0" dest="model.module.Register186973c" destStartBit="15" numBits="1" id="model.microinstruction.TransferRtoRbc79be" />
	<TransferRtoR name="TR&lt;-PC" source="model.module.Register1423afa" srcStartBit="0" dest="model.module.Register186973c" destStartBit="0" numBits="12" id="model.microinstruction.TransferRtoRc8910c" />

	<!--............. transferRtoA ..................-->
	<!-- none -->

	<!--............. transferAtoR ..................-->
	<!-- none -->

	<!--............. decode ........................-->
	<Decode name="Decode IR" ir="model.module.Register27b8f9" id="model.microinstruction.Decode8e73fa" />

	<!--............. set condition bit .............-->
	<SetCondBit name="E&lt;-0" bit="model.module.ConditionBitbf10dc" value="0" id="model.microinstruction.SetCondBit1fe209b" />
	<SetCondBit name="S&lt;-1" bit="model.module.ConditionBit9e7a9b" value="1" id="model.microinstruction.SetCondBitaed893" />

	<!--............. io ............................-->
	<IO name="AC&lt;-INPR" direction="input" type="ascii" buffer="model.module.Register3d0ab9" connection="[Dialog]" id="model.microinstruction.IO5a6d7b" />
	<IO name="OUTR&lt;-AC" direction="output" type="ascii" buffer="model.module.Register3d0ab9" connection="[Dialog]" id="model.microinstruction.IO104cda9" />

	<!--............. memory access .................-->
	<MemoryAccess name="AR&lt;-M[AR]" direction="read" memory="model.module.RAM86991c" data="model.module.Register3969" address="model.module.Register3969" id="model.microinstruction.MemoryAccess10ed4aa" />
	<MemoryAccess name="CTR&lt;-M[AR]" direction="read" memory="model.module.RAM86991c" data="model.module.Register19c2267" address="model.module.Register3969" id="model.microinstruction.MemoryAccess132fb18" />
	<MemoryAccess name="DR&lt;-M[AR]" direction="read" memory="model.module.RAM86991c" data="model.module.Register1362cac" address="model.module.Register3969" id="model.microinstruction.MemoryAccess447070" />
	<MemoryAccess name="IR&lt;-M[AR]" direction="read" memory="model.module.RAM86991c" data="model.module.Register27b8f9" address="model.module.Register3969" id="model.microinstruction.MemoryAccess1d09b14" />
	<MemoryAccess name="M[AR]&lt;-AC" direction="write" memory="model.module.RAM86991c" data="model.module.Register3d0ab9" address="model.module.Register3969" id="model.microinstruction.MemoryAccess26acc0" />
	<MemoryAccess name="M[AR]&lt;-DR" direction="write" memory="model.module.RAM86991c" data="model.module.Register1362cac" address="model.module.Register3969" id="model.microinstruction.MemoryAccess266ea7" />
	<MemoryAccess name="M[AR]&lt;-PC" direction="write" memory="model.module.RAM86991c" data="model.module.Register1423afa" address="model.module.Register3969" id="model.microinstruction.MemoryAccess1f85723" />
	<MemoryAccess name="M[AR]&lt;-TR" direction="write" memory="model.module.RAM86991c" data="model.module.Register186973c" address="model.module.Register3969" id="model.microinstruction.MemoryAccessb36933" />

	<!--............. end ...........................-->
	<End id="model.microinstruction.End15c8009" />

	<!--............. comment ...........................-->
	<!-- none -->

	<!--............. global equs ..................-->
	<!-- none -->

	<!--............. fetch sequence ................-->
	<FetchSequence>
		<Microinstruction microRef="model.microinstruction.TransferRtoR1faaa1d" />
		<Microinstruction microRef="model.microinstruction.MemoryAccess1d09b14" />
		<Microinstruction microRef="model.microinstruction.Increment163938d" />
		<Microinstruction microRef="model.microinstruction.Test21f2eb" />
		<Microinstruction microRef="model.microinstruction.TransferRtoR7612ce" />
		<Microinstruction microRef="model.microinstruction.Test1a43726" />
		<Microinstruction microRef="model.microinstruction.MemoryAccess10ed4aa" />
		<Microinstruction microRef="model.microinstruction.Decode8e73fa" />
	</FetchSequence>

	<!--............. machine instructions ..........-->

	<MachineInstruction name="ICSZ" opcode="f020" instructionFormat="Opcd" assemblyFormat="Opcd" instructionColors="#f8c8dd" assemblyColors="#f8c8dd" >
		<Microinstruction microRef="model.microinstruction.Incrementec8b4b" />
		<Microinstruction microRef="model.microinstruction.Test1a3799b" />
		<Microinstruction microRef="model.microinstruction.Increment163938d" />
		<Microinstruction microRef="model.microinstruction.End15c8009" />
	</MachineInstruction>

	<MachineInstruction name="OUT" opcode="f400" instructionFormat="Opcd" assemblyFormat="Opcd" instructionColors="#d7e09a" assemblyColors="#d7e09a" >
		<Microinstruction microRef="model.microinstruction.IO104cda9" />
		<Microinstruction microRef="model.microinstruction.End15c8009" />
	</MachineInstruction>

	<MachineInstruction name="INP" opcode="f800" instructionFormat="Opcd" assemblyFormat="Opcd" instructionColors="#cdbde5" assemblyColors="#cdbde5" >
		<Microinstruction microRef="model.microinstruction.IO5a6d7b" />
		<Microinstruction microRef="model.microinstruction.End15c8009" />
	</MachineInstruction>

	<MachineInstruction name="LDC" opcode="6" instructionFormat="Opcode Mode Address" assemblyFormat="Opcode Mode Address" instructionColors="#aab8e1 #e399ac #cdeaa1" assemblyColors="#aab8e1 #e399ac #cdeaa1" >
		<Microinstruction microRef="model.microinstruction.MemoryAccess132fb18" />
		<Microinstruction microRef="model.microinstruction.End15c8009" />
	</MachineInstruction>

	<MachineInstruction name="BSA" opcode="5" instructionFormat="Opcode Mode Address" assemblyFormat="Opcode Mode Address" instructionColors="#c382d0 #8dd5bb #b3e6e0" assemblyColors="#c382d0 #8dd5bb #b3e6e0" >
		<Microinstruction microRef="model.microinstruction.MemoryAccess1f85723" />
		<Microinstruction microRef="model.microinstruction.Increment982a06" />
		<Microinstruction microRef="model.microinstruction.TransferRtoR17ebe99" />
		<Microinstruction microRef="model.microinstruction.End15c8009" />
	</MachineInstruction>

	<MachineInstruction name="BUN" opcode="4" instructionFormat="Opcode Mode Address" assemblyFormat="Opcode Mode Address" instructionColors="#cbc9ae #adc4a5 #94b898" assemblyColors="#cbc9ae #adc4a5 #94b898" >
		<Microinstruction microRef="model.microinstruction.TransferRtoR17ebe99" />
		<Microinstruction microRef="model.microinstruction.End15c8009" />
	</MachineInstruction>

	<MachineInstruction name="ADD" opcode="1" instructionFormat="Opcode Mode Address" assemblyFormat="Opcode Mode Address" instructionColors="#a599fd #e78788 #97ce81" assemblyColors="#a599fd #e78788 #97ce81" >
		<Microinstruction microRef="model.microinstruction.MemoryAccess447070" />
		<Microinstruction microRef="model.microinstruction.Arithmetic6dc475" />
		<Microinstruction microRef="model.microinstruction.End15c8009" />
	</MachineInstruction>

	<MachineInstruction name="AND" opcode="0" instructionFormat="Opcode Mode Address" assemblyFormat="Opcode Mode Address" instructionColors="#e8bfd7 #e1999a #85c6a7" assemblyColors="#e8bfd7 #e1999a #85c6a7" >
		<Microinstruction microRef="model.microinstruction.MemoryAccess447070" />
		<Microinstruction microRef="model.microinstruction.Logical1260340" />
		<Microinstruction microRef="model.microinstruction.End15c8009" />
	</MachineInstruction>

	<MachineInstruction name="STA" opcode="3" instructionFormat="Opcode Mode Address" assemblyFormat="Opcode Mode Address" instructionColors="#d7bab9 #d8c4b7 #96b998" assemblyColors="#d7bab9 #d8c4b7 #96b998" >
		<Microinstruction microRef="model.microinstruction.MemoryAccess26acc0" />
		<Microinstruction microRef="model.microinstruction.End15c8009" />
	</MachineInstruction>

	<MachineInstruction name="LDA" opcode="2" instructionFormat="Opcode Mode Address" assemblyFormat="Opcode Mode Address" instructionColors="#f4e98e #f586be #eca6de" assemblyColors="#f4e98e #f586be #eca6de" >
		<Microinstruction microRef="model.microinstruction.MemoryAccess447070" />
		<Microinstruction microRef="model.microinstruction.TransferRtoRc5f6b0" />
		<Microinstruction microRef="model.microinstruction.End15c8009" />
	</MachineInstruction>

	<MachineInstruction name="HLT" opcode="e001" instructionFormat="Opcd" assemblyFormat="Opcd" instructionColors="#cf8ca2" assemblyColors="#cf8ca2" >
		<Microinstruction microRef="model.microinstruction.SetCondBitaed893" />
		<Microinstruction microRef="model.microinstruction.End15c8009" />
	</MachineInstruction>

	<MachineInstruction name="INC" opcode="e020" instructionFormat="Opcd" assemblyFormat="Opcd" instructionColors="#f6c380" assemblyColors="#f6c380" >
		<Microinstruction microRef="model.microinstruction.Incrementfd2913" />
		<Microinstruction microRef="model.microinstruction.End15c8009" />
	</MachineInstruction>

	<MachineInstruction name="SZE" opcode="e002" instructionFormat="Opcd" assemblyFormat="Opcd" instructionColors="#9f8bf5" assemblyColors="#9f8bf5" >
		<Microinstruction microRef="model.microinstruction.Test1a3f668" />
		<Microinstruction microRef="model.microinstruction.Increment163938d" />
		<Microinstruction microRef="model.microinstruction.End15c8009" />
	</MachineInstruction>

	<MachineInstruction name="SZA" opcode="e004" instructionFormat="Opcd" assemblyFormat="Opcd" instructionColors="#da83aa" assemblyColors="#da83aa" >
		<Microinstruction microRef="model.microinstruction.Test1b51490" />
		<Microinstruction microRef="model.microinstruction.Increment163938d" />
		<Microinstruction microRef="model.microinstruction.End15c8009" />
	</MachineInstruction>

	<MachineInstruction name="SNA" opcode="e008" instructionFormat="Opcd" assemblyFormat="Opcd" instructionColors="#89c1e8" assemblyColors="#89c1e8" >
		<Microinstruction microRef="model.microinstruction.Test66d678" />
		<Microinstruction microRef="model.microinstruction.Increment163938d" />
		<Microinstruction microRef="model.microinstruction.End15c8009" />
	</MachineInstruction>

	<MachineInstruction name="SPA" opcode="e010" instructionFormat="Opcd" assemblyFormat="Opcd" instructionColors="#958899" assemblyColors="#958899" >
		<Microinstruction microRef="model.microinstruction.Test12fbdf" />
		<Microinstruction microRef="model.microinstruction.Increment163938d" />
		<Microinstruction microRef="model.microinstruction.End15c8009" />
	</MachineInstruction>

	<MachineInstruction name="CIL" opcode="e040" instructionFormat="Opcd" assemblyFormat="Opcd" instructionColors="#8bdfeb" assemblyColors="#8bdfeb" >
		<Microinstruction microRef="model.microinstruction.TransferRtoR1c251e9" />
		<Microinstruction microRef="model.microinstruction.TransferRtoR1342e53" />
		<Microinstruction microRef="model.microinstruction.Shift564e7d" />
		<Microinstruction microRef="model.microinstruction.TransferRtoR25c6a" />
		<Microinstruction microRef="model.microinstruction.End15c8009" />
	</MachineInstruction>

	<MachineInstruction name="CIR" opcode="e080" instructionFormat="Opcd" assemblyFormat="Opcd" instructionColors="#a781d9" assemblyColors="#a781d9" >
		<Microinstruction microRef="model.microinstruction.TransferRtoRbc79be" />
		<Microinstruction microRef="model.microinstruction.TransferRtoR233611" />
		<Microinstruction microRef="model.microinstruction.Shiftdc3baf" />
		<Microinstruction microRef="model.microinstruction.TransferRtoRfea219" />
		<Microinstruction microRef="model.microinstruction.End15c8009" />
	</MachineInstruction>

	<MachineInstruction name="CME" opcode="e100" instructionFormat="Opcd" assemblyFormat="Opcd" instructionColors="#d2a080" assemblyColors="#d2a080" >
		<Microinstruction microRef="model.microinstruction.Logical13395ff" />
		<Microinstruction microRef="model.microinstruction.End15c8009" />
	</MachineInstruction>

	<MachineInstruction name="CMA" opcode="e200" instructionFormat="Opcd" assemblyFormat="Opcd" instructionColors="#b5c1f2" assemblyColors="#b5c1f2" >
		<Microinstruction microRef="model.microinstruction.Logicalba1e21" />
		<Microinstruction microRef="model.microinstruction.End15c8009" />
	</MachineInstruction>

	<MachineInstruction name="CLE" opcode="e400" instructionFormat="Opcd" assemblyFormat="Opcd" instructionColors="#fda7ca" assemblyColors="#fda7ca" >
		<Microinstruction microRef="model.microinstruction.SetCondBit1fe209b" />
		<Microinstruction microRef="model.microinstruction.End15c8009" />
	</MachineInstruction>

	<MachineInstruction name="CLA" opcode="e800" instructionFormat="Opcd" assemblyFormat="Opcd" instructionColors="#908fd6" assemblyColors="#908fd6" >
		<Microinstruction microRef="model.microinstruction.CpusimSet1ded087" />
		<Microinstruction microRef="model.microinstruction.End15c8009" />
	</MachineInstruction>

	<!--............. highlighting info .............-->
	<HighlightingInfo>
	</HighlightingInfo>

	<!--............. loading info ..................-->
	<LoadingInfo ram="model.module.RAM86991c" startingAddress="0" />

	<!--............. indexing info ............-->
	<IndexingInfo indexFromRight="true" />

	<!--............. program counter info ..................-->

</Machine>
