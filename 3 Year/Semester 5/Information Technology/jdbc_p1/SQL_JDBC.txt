CREATE TABLE STUDENT(ROLL INT NOT NULL,
    NAME VARCHAR(30) NOT NULL,
    PRIMARY KEY(ROLL));

INSERT INTO STUDENT(ROLL, NAME)
    VALUES ( 5781, "ROHIT"),
    (5743, "YASHNIT"),
    (5643, "TUSHAR"),
    (5780, "PRASHANT"),
    (5412, "ROCHAK");

CREATE TABLE RESULT( ID INT NOT NULL AUTO_INCREMENT, SID INT, S1 INT NOT NULL, S2 INT NOT NULL, S3 INT NOT NULL, PRIMARY KEY(ID),
FOREIGN KEY (SID) REFERENCES STUDENT(ROLL) );

INSERT INTO RESULT (SID, S1, S2, S3)
VALUES (5412, 55, 65, 75), (5643, 60, 70, 80), (5743, 45,55,65), (5780, 60, 65, 70), (5781, 70, 75, 85);

 SELECT COUNT(*) AS TOTAL_STUDENTS FROM STUDENT;

SELECT S.NAME, (R.S1 + R.S2 + R.S3) / 3 AS AVERAGE_MARKS
FROM STUDENT S
JOIN RESULT R
ON S.ROLL = R.SID;

SELECT S.NAME, (R.S1 + R.S2 + R.S3)
FROM STUDENT S
JOIN RESULT R
ON S.ROLL = R.SID
ORDER BY 2 DESC
LIMIT 1;

SELECT COUNT(*),
		CASE
			WHEN MARKS > 224 THEN 1
			WHEN MARKS < 225 AND MARKS > 149 THEN 2
			ELSE 3 END AS DIVISION
		FROM (
			SELECT S1 + S2 + S3 AS MARKS
			FROM RESULT
		) SD
		GROUP BY 2
		ORDER BY 2;


WITH AGG AS (
	SELECT S.NAME AS NAME,
			R.S1 AS S1,
			R.S2 AS S2,
			R.S3 AS S3
		FROM STUDENT S
		JOIN RESULT R
		ON S.ROLL = R.SID)

		SELECT NAME, CONCAT(MAX(S1), ' in S1') AS HIGHEST_MARKS
			FROM AGG
		UNION
		SELECT NAME, CONCAT(MAX(S2), ' in S2') AS HIGHEST_MARKS
			FROM AGG
		UNION
		SELECT NAME, CONCAT(MAX(S3), ' in S3') AS HIGHEST_MARKS
			FROM AGG;

SELECT s.name AS NAME, r.s1 AS SUB1, r.s2 AS SUB2, r.s3 AS SUB3, (r.s1 + r.s2 + r.s3) /3 as AVERAGE_MARKS
	FROM STUDENT s
	JOIN RESULT r
	ON s.roll = r.sid;

SELECT NAME, MAXIMUM_MARKS
	FROM
	(SELECT S.NAME AS NAME, (R.S1 + R.S2 + R.S3) AS MAXIMUM_MARKS
	FROM STUDENT S
	JOIN RESULT R
	ON S.ROLL = R.SID
	ORDER BY 2 DESC
	LIMIT 2) SD
	ORDER BY 2
	LIMIT 1;
